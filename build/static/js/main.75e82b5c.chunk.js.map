{"version":3,"sources":["axios.js","requests.js","Banner.js","Nav.js","Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRatedMovies","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","titel","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","console","log","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","poster_path","id","padding","videoId","opts","heighr","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e82b5c.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n  });\r\n  // instance.get(\"/foo-bar\");\r\n  \r\n  export default instance;\r\n  ","const API_KEY = \"e559611442e448b8a33f869f4a89baea\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRatedMovies: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\nexport default requests;\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Banner.css'\r\nimport  axios from './axios'\r\nimport requests from'./requests'\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n          const request = await axios.get(requests.fetchNetflixOriginals);\r\n          setMovie(\r\n            request?.data.results[  //...optional chaning if smt wrong the output will be undifning\r\n              Math.floor(Math.random() * request.data.results.length)\r\n            ]\r\n          );\r\n          return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    // console.log(movie)\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n      }\r\n    return (\r\n        <header\r\n        className=\"banner\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n          backgroundPosition: \"center center\",\r\n        }}\r\n      >\r\n        <div className=\"banner__contents\">\r\n          <h1 className=\"banner__title\">\r\n            {movie?.title || movie?.name || movie.original_name}\r\n          </h1>\r\n          <div className=\"banner__buttons\">\r\n            <button className=\"banner__button\">Play</button>\r\n            <button className=\"banner__button\">My List</button>\r\n          </div>\r\n          <h1 className=\"banner__description\">\r\n            {truncate (movie?.overview,150)}\r\n          </h1>\r\n        </div>\r\n        <div className=\"banner__fadeBottom\" />\r\n      </header>\r\n    );\r\n}\r\n\r\nexport default Banner\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/12c6f684-d447-4457-84fa-12033cfd581e/d9z3o32-2c299a83-49a9-44c2-bc23-b0b5070a546b.png/v1/fill/w_1024,h_512,strp/netflix_logo_background__2_by_sixmonthslate_d9z3o32-fullview.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3siaGVpZ2h0IjoiPD01MTIiLCJwYXRoIjoiXC9mXC8xMmM2ZjY4NC1kNDQ3LTQ0NTctODRmYS0xMjAzM2NmZDU4MWVcL2Q5ejNvMzItMmMyOTlhODMtNDlhOS00NGMyLWJjMjMtYjBiNTA3MGE1NDZiLnBuZyIsIndpZHRoIjoiPD0xMDI0In1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmltYWdlLm9wZXJhdGlvbnMiXX0.WKy-rj_8y7ziLuhhtAES7jddy-eUpz6PQQ331bp7rRI\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"Avatar logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Row.css'\r\nimport axios from  './axios'\r\n// import requests from './requests';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({ titel, fetchUrl,isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\")\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      // console.log(request.data.results);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]); //... for dependancy eyetedegageme enditeyek from the returned object\r\n  console.log(movies)\r\n  const opts = {\r\n    heighr: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    }\r\n  }\r\n  const handleClick = (movie) => {\r\n    if(trailerUrl){\r\n      setTrailerUrl('')\r\n    }else {\r\n      movieTrailer(movie?.title || \"\")\r\n      .then((url) => {\r\n        const urlParams = new URLSearchParams(new URL(url).search)\r\n        setTrailerUrl(urlParams.get('v'))\r\n      })\r\n      .catch((error) => console.log(error))\r\n    }\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      < h1> {titel}</h1>\r\n      \r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n          key={movie.id}\r\n          onClick={() => handleClick(movie)}\r\n            \r\n          className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n          src={`${base_url}${\r\n            isLargeRow ? movie.poster_path : movie.backdrop_path\r\n          }`} //......ternary operator\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div style={{ padding: \"40px\"}}>\r\n       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\nimport './App.css';\nimport Banner from './Banner';\nimport Nav from './Nav';\nimport requests from './requests';\nimport Row from './Row';\n\n\n\nfunction App() {\n  return (\n    <div className='App'> \n      {/* <h1>Evangadi family</h1> */}\n      <Nav/>\n      <Banner/>\n      <Row titel=\"NETFLIX ORIGINAL\"  fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n      <Row titel=\"TRENDING NOW\" fetchUrl={requests.fetchTrending} />\n     \n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRatedMovies} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row\n        title=\"Documentaries Movies\"\n        fetchUrl={requests.fetchDocumentaries}\n      />\n    </div>\n  )\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}